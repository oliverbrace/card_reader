import logging

import cv2
import numpy as np
from scipy import ndimage

from image_functions.clean_image import closing, opening, sharpen
from image_functions.edge_detection import sobel_edge
from image_functions.get_image import read_saved_image
from image_functions.image_check import (
    get_image_size,
    percentage_black_pixels,
    percentage_white_pixels,
)
from image_functions.serialize_image import ImageSerialize
from image_functions.transform_image import create_grey, grey_to_bl, invert_black_white
from read_text import find_text_in_image

#! Figure out if black and white image can be used.
#! May need to detect the amount of one of them in an image
# Thresh of 127 for black_white seemed to be best but was still bad

Is = ImageSerialize()
image = read_saved_image(f"text_sharp_img.png", path="images/text_images")
image = cv2.equalizeHist(image)
# image = create_grey(image)
# image = sharpen(image)
# image = opening(image, 2)
Is.output_image(image, f"text_sharp_bl.png", path="images/text_images")
text = find_text_in_image(image)
print(text)
